{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyup","event","setState","key","document","addEventListener","this","removeEventListener","className","PureComponent","ReactDOM","render","getElementById"],"mappings":"2MAQaA,EAAb,4MACEC,MAAe,CAAEC,WAAY,IAD/B,EAWEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAZtC,uDAGE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAJ5C,kCAOE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAR/C,oBAeE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAU,mCACmBA,EADnB,KAGT,kCAxBZ,GAAyBU,iB,MCHzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.59ae6208.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\ntype Props = {};\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends PureComponent<Props, State> {\n  state: State = { pressedKey: '' };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey ? (\n            `The last pressed key is [${pressedKey}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}